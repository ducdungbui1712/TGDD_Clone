@page "/register"
@using CloneTGDD.Web.Models.DTO
@using System.ComponentModel.DataAnnotations;
@inject UserAuthApiClient UserAuthApiClient
@inject NavigationManager NavigationManager
@attribute [StreamRendering]

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister" autocomplete="off">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>New User Registration</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <label>First Name</label>
                <InputText @bind-Value="registerModel.Name" class="form-control"></InputText>
            </div>
            <div class="row">
                <label>Last Name</label>
                <InputText @bind-Value="registerModel.LastName" class="form-control"></InputText>
            </div>
            <div class="row">
                <label>Email</label>
                <InputText @bind-Value="registerModel.Email" class="form-control"></InputText>
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
            <div class="row">
                <label>Password</label>
                <InputText @bind-Value="registerModel.Password" class="form-control" type="password"></InputText>
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <div class="row">
                <label>ConfirmPassword</label>
                <InputText @bind-Value="registerModel.ConfirmPassword" class="form-control" type="password"></InputText>
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </div>
            <div class="row">
                <label>Phone Number</label>
                <InputText @bind-Value="registerModel.PhoneNumber" class="form-control"></InputText>
                <ValidationMessage For="@(() => registerModel.PhoneNumber)" />
            </div>
            <div class="row">
                <label>Street</label>
                <InputText @bind-Value="registerModel.Street" class="form-control"></InputText>
            </div>
            <div class="row">
                <label>City</label>
                <InputText @bind-Value="registerModel.City" class="form-control"></InputText>
            </div>
            <div class="row">
                <label>Country</label>
                <InputText @bind-Value="registerModel.Country" class="form-control"></InputText>
            </div>
            <br />
            <button type="submit" class="btn btn-outline-primary">Register</button>
        </div>
    </div>
</EditForm>

@code {
    private RegisterDTO registerModel = new RegisterDTO();

    private async Task HandleRegister()
    {
        ResponseDTO response = await UserAuthApiClient.RegisterUser(registerModel);
        if (response.IsSuccess)
        {
            // Handle successful registration
            NavigationManager.NavigateTo($"/");
        }
        else
        {
            // Handle registration error
            var error = response.Message;
        }
    }
}
