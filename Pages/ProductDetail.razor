@page "/Detail/{Id:int}"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

@if (arrImage != null)
{

  <FluentGrid Spacing="3" Justify="JustifyContent.SpaceBetween">
    <FluentGridItem xs="12" sm="4">
<div>
    <FluentHorizontalScroll class="full-width" Speed="1200" Easing="ScrollEasing.EaseInOut">
          @foreach(var item in arrImage){
              <img class="img-fluid object-fit-cover" src="@item" alt="">
          }
    </FluentHorizontalScroll>
</div>
    </FluentGridItem>
    <FluentGridItem xs="12" sm="8">
      	<h3 class="product-title">Điện Thoại @phone.Model</h3>
						<div class="rating">
							<div class="stars">
								<span class="fa fa-star checked"></span>
								<span class="fa fa-star checked"></span>
								<span class="fa fa-star checked"></span>
								<span class="fa fa-star"></span>
								<span class="fa fa-star"></span>
							</div>
							<span class="review-no">41 reviews</span>
						</div>
						<p class="product-description">@phone.Description</p>
						<h4 class="price">Giá: <span>@phone.BasePrice.ToString("C")</span></h4>
						<p class="vote"><strong>91%</strong> of buyers enjoyed this product! <strong>(87 votes)</strong></p>
						<h5 class="sizes">sizes:
							<span class="size" data-toggle="tooltip" title="small">s</span>
							<span class="size" data-toggle="tooltip" title="medium">m</span>
							<span class="size" data-toggle="tooltip" title="large">l</span>
							<span class="size" data-toggle="tooltip" title="xtra large">xl</span>
						</h5>
						<h5 class="colors">colors:
							<span class="color orange not-available" data-toggle="tooltip" title="Not In store"></span>
							<span class="color green"></span>
							<span class="color blue"></span>
						</h5>
						<div class="action">
              <FluentButton IconStart="@(new Icons.Regular.Size24.Cart())"  class="d-block button">
                        Mua Ngay
              </FluentButton>
						</div>
    </FluentGridItem>
  </FluentGrid>
}


@code {
  Phone phone = new Phone();
  string test = "test";
  [Parameter]
  public int Id { get; set; }
  string[] arrImage;
  protected override async Task OnInitializedAsync()
  {
    phone = await HttpClient.GetFromJsonAsync<Phone>($"{NavigationManager.BaseUri}phones/{Id}");
    arrImage = phone.ProductImage.Split(',');
  }


}