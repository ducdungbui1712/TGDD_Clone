@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject OrderState OrderState
@inject IJSRuntime JS
<PageTitle>HomePage</PageTitle>

<HomeBanner/>

<FluentGrid xs="6" sm="3" Justify="JustifyContent.Center">
     @foreach (var phone in Phones) {
        @if(phone.Discount !=1){
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                <FluentCard class="text-center product-info">
                    @{ var resultPrice = @phone.BasePrice -(@phone.BasePrice * @phone.Discount);}
                    <div class="badge bg-dark text-white position-absolute w-2" style="top: 0.5rem; right: 0.5rem">Sale</div>
                    <img class="card-img-top w-70 img-fluid" src="@phone.ImageUrl" alt="..." />
                    <p class="m-2">@phone.Model</p>
                    <strong class="m-2 price">
                        <span class="text-muted text-decoration-line-through">@phone.BasePrice.ToString("C")</span> @resultPrice.ToString("C")
                    </strong>
                    <FluentButton @onclick="()=> NavigateToDetailPage(phone.Id)" IconStart="@(new Icons.Regular.Size24.Cart())" class="d-block">
                        Mua Ngay
                    </FluentButton>
                </FluentCard>
            </div>
        </div>
        }
        else{
           <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                <FluentCard class="text-center product-info">
                    <img class="card-img-top w-70 img-fluid" src="@phone.ImageUrl" alt="..." />
                    <p class="m-2">@phone.Model</p>
                    <strong class="m-2 price">
                        <span>@phone.BasePrice.ToString("C")</span>
                    </strong>
                    <FluentButton @onclick="()=> NavigateToDetailPage(phone.Id)" IconStart="@(new Icons.Regular.Size24.Cart())" class="d-block">
                        Mua Ngay
                    </FluentButton>
                </FluentCard>
            </div>
        </div>

        }
}

</FluentGrid>

<Hotsale/>
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Toggle right offcanvas</button>

<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasRightLabel">Giỏ hàng</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
   @foreach(var item in OrderState.Order.Phones){
        <ProductCartDialog phone="item" OnRemove="@(()=>RemovePhone(item))"/>
	}

    <div class="order-total @(OrderState.Order.Phones.Any() ? "" : "hidden")">
    Total:
        <span class="total-price">@OrderState.Order.GetFormattedTotalPrice()</span>
        <a href="checkout" class="@(OrderState.Order.Phones.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order >
        </a>
    </div>
</div>
</div>
@code{
    List<Phone> Phones = new List<Phone>();
    protected override async Task OnInitializedAsync()
    {
    Phones = await HttpClient.GetFromJsonAsync<List<Phone>>(NavigationManager.BaseUri + "phones");
    }
	private void NavigateToDetailPage(int id)
	{
		NavigationManager.NavigateTo($"/Detail/{id}");
	}

    async Task RemovePhone(Phone phone)
    {
        if (await JS.InvokeAsync<bool>("confirm", $"Remove {phone.Model}  from the order?"))
        {
            OrderState.RemovePhoneFromOrder(phone);
        }
    }
}
